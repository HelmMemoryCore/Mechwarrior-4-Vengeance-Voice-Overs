
fsm Alpine03_Dropship : integer;


//------------------------------------------------------------------

// Alpine03_Dropship: from Generic_Turret

//------------------------------------------------------------------



//------------------------------------------------------------------
//     Constants
//------------------------------------------------------------------

	const
		#include_ <content\ABLScripts\mwconst.abi>

//------------------------------------------------------------------
//     Types
//------------------------------------------------------------------

	type
		#include_ <content\ABLScripts\mwtype.abi>
	

//------------------------------------------------------------------
//     Variables
//------------------------------------------------------------------

	var
		static integer			attackRange;		// At what range do I start shooting?
		static integer			withdrawRange;		// At what range do I stop attacking?

		static integer			piloting;			// Piloting skill
		static integer			gunnery;			// Gunnery skill/chance to hit
		static real				minDelay;			// Minimum amount of time I will wait between shots once a weapon is reloaded
		static real				maxDelay;			// Maximum amount of time I will wait between shots once a weapon is reloaded
		static integer 			eliteLevel;			// Elite level.  This helps determine tactics, defensive manuevers, opportunity fire
													// and other things.  It indicates a general level of combat experience.

 		static integer			isShotRadius;		// How far away from me will I detect an enemy shot?
		static integer			findTypes;			// What kind of enemies to look for

		static integer 			attackSound;		// The attack sound I play when I first attack
		static integer 			deathSound;			// The sound I play when I die
		
		static integer			mood;				// My default mood.
		static integer			addtime;
		static boolean			played;
		static boolean			warningplayed;
		
//------------------------------------------------------------------
//     Init: my initialization function
//------------------------------------------------------------------

function Init;
	code
		// script-specific variables
		attackRange		= 800;
		withdrawRange	= 900;

		// driver settings
		piloting		= 60;
		gunnery			= 75;
		minDelay		= 0.0;
		maxDelay		= 0.2;
		eliteLevel		= 70;
		isShotRadius	= 120;
		attackSound		= -1; // no sound
		deathSound		= -1; // no sound
		mood			= NEUTRAL_START;
		findTypes		= FT_DEFAULT;
		addtime = 120;
		played = false;
		warningplayed = false;

endfunction;

//------------------------------------------------------------------
//	StartState: my initial state
//------------------------------------------------------------------

state StartState;

	code
		SetFiringDelay			(ME,minDelay,maxDelay);
		SetIgnoreFriendlyFire	(ME,true);
		SetIsShotRadius			(ME,isshotradius);
		SetEntropyMood			(ME,mood);
		SetCurMood				(ME,mood);
		SetSkillLevel			(ME,piloting,gunnery,elitelevel);
		

				
		trans shutdownState;

endstate;

state ShutdownState;
	code
	
		if (timegreater(gti_timer_10,basetime)) then

			playlancematesound("VO\OP3\MI3\power",2);
			trans waitstate;
		endif;

endstate;

//------------------------------------------------------------------
//	WaitState: wait for someone to come near
//------------------------------------------------------------------

state WaitState;
	code
	
		if (timegreater(gti_timer_10,(basetime+addtime))) then
			playvoiceoveronce("VO\OP1\MI3\ShipDeparts",talker_FO2);
			playvoiceoveronce("VO\OP7\MI1\shiplift",talker_RAT);
			playlancematesound("VO\OP7\MI1\shiplift",1);
			trans takeoffstate;
		endif;
		
		if (not warningplayed) then
			if (timegreater(gti_timer_10,(basetime+(addtime-30)))) then
				playvoiceoveronce("VO\OP7\MI1\3rdout",talker_RAT);
				warningplayed = true;
			endif;			
		endif;
			
	
		if (FindEnemy(attackRange,findTypes)) then
			trans AttackState;
		endif;

endstate;

state takeoffstate;
	code
	
		if (ordertakeoff(500)) then
			trans byebye;
		endif;

endstate;

state byebye;
	code
	
		dropshipgone = true;
		orderstopattacking;
		clearmoveorder(me);
		shutdown(me);
		teleporttohell(me);		
		trans empty;

endstate;

state empty;
	code
	
endstate;

//------------------------------------------------------------------
//	AttackState: let's see what's around, and destroy it
//------------------------------------------------------------------

state AttackState;
	code
		if (LeaveAttackState(withdrawRange)) then
			OrderStopAttacking;
			SetTarget(ME,NO_UNIT);
			trans WaitState;
		endif;

		if (not played) then
			played = true;
			StartMusic("Music\T2loop",3.5,3.0,50);
		endif;
		
		OrderAttack(False);
		
		if (not warningplayed) then
			if (timegreater(gti_timer_10,(basetime+(addtime-30)))) then
				playvoiceoveronce("VO\OP7\MI1\3rdout",talker_RAT);
				warningplayed = true;
			endif;			
		endif;
		
		if (timegreater(gti_timer_10,(basetime+addtime))) then
			playvoiceoveronce("VO\OP1\MI3\ShipDeparts",talker_FO2);
			playvoiceoveronce("VO\OP7\MI1\shiplift",talker_RAT);
			playlancematesound("VO\OP7\MI1\shiplift",1);
			trans takeoffstate;
		endif;

endstate;

//------------------------------------------------------------------
//	DeadState: OK, I kicked the bucket.
//------------------------------------------------------------------

state DeadState;
	code
		if (deathSound <> -1) then	
			PlaySoundOnce(deathSound);
		endif;		

		orderDie;

endstate;


endfsm.

