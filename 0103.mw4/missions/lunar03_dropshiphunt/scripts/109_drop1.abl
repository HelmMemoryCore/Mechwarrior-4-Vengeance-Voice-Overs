
//------------------------------------------------------------------
fsm Dropship1 : integer;


//------------------------------------------------------------------
//     Constants
//------------------------------------------------------------------

	const
		#include_ <content\ABLScripts\mwconst.abi>

//------------------------------------------------------------------
//     Types
//------------------------------------------------------------------

	type
		#include_ <content\ABLScripts\mwtype.abi>
	

//------------------------------------------------------------------
//     Variables
//------------------------------------------------------------------

  var		
		static integer			piloting;			// Piloting skill
		static integer			gunnery;			// Gunnery skill/chance to hit
		static real				minDelay;			// Minimum amount of time I will wait between shots once a weapon is reloaded
		static real				maxDelay;			// Maximum amount of time I will wait between shots once a weapon is reloaded
		static integer 			eliteLevel;			// Elite level.  This helps determine tactics, defensive manuevers, opportunity fire
		static integer 			attackSound;		// The attack sound I play when I first attack
		static integer 			deathSound;			// The sound I play when I die
		static boolean			Dumbass;
		static boolean	count;
		static integer	FuelNeeded;
		Static Boolean	DontTest;
//------------------------------------------------------------------
//     Init: my initialization function
//------------------------------------------------------------------



function Init;
	code
		FuelNeeded = 210;
		piloting		= 50;
		gunnery			= 40;
		minDelay		= 2.0;
		maxDelay		= 4.5;
		eliteLevel		= 60;
		attackSound		= -1; // no sound
		deathSound		= -1; // no sound
		Dumbass = false;
		count = false;
		DontTest = false;
endfunction;

function PumpedFuel : Integer;
				
		var
			integer fuel_pumped;		
			
		code			
				
			fuel_pumped = 9;
				
					
				If (isdead(eve_Objective_APU_Alpha_1) == False) then							 		//APU1 not Destroyed
					fuel_pumped = fuel_pumped + 7;
				endif;
					
				If (isdead(eve_Objective_APU_Alpha_2) == False) then							 		//APU2 not Destroyed
					fuel_pumped = fuel_pumped + 7;
				endif;
				
				If (isdead(eve_Objective_APU_Alpha_3) == False) then							 		//APU3 not Destroyed
					fuel_pumped = fuel_pumped + 7;
				endif;
				
				return (fuel_pumped);

endfunction; 		

 state StartState;

	code
		SetFiringDelay			(ME,minDelay,maxDelay);
		SetIgnoreFriendlyFire	(ME,false);
		SetSkillLevel			(ME,piloting,gunnery,eliteLevel);
				trans LandingPad;

endstate;


state LandingPad;
	code

//**************************************	
//** I DONT THINK ALPHA SHOULD SHOOT **
//*************************************	


//		if (FindEnemy(600,FT_Default)) then
//			trans AttackState;
//		endif;

		if (TimeGreater(gti_Timer_22,30)) then
			FuelNeeded = (FuelNeeded - PumpedFuel);
			
		//************
		//** PRINT **
		//***********

			
//			print (FuelNeeded);
			ResetTimer(gti_Timer_22);
		endif;
		
		
		//print(fuelNeeded);
	if DUMBASS == false then	 	
		if FuelNeeded <= 0 then															
				starttimer(gti_timer_23);
				Dumbass = true;
				if isdead(eve_forward1) == false then
				PlayVoiceOverOnce("VO\OP1\MI3\Ship3On",Talker_FO1);
				// playsoundonce(eso_FOR_F);	
				endif;
		endif;
	endif;
	
	
		if timegreater(23,10) then
			trans liftoff;
		endif;	
			

endstate;

state AttackState;
	code
		
		if (LeaveAttackState(1000)) then
			OrderStopAttacking;
			SetTarget(ME,NO_UNIT);
			trans LandingPad;
		endif;

		if (attackSound <> -1) then	
			PlaySoundOnce(attackSound);
		endif;
		
		
		if (TimeGreater(gti_Timer_22,30)) then
			FuelNeeded = FuelNeeded - PumpedFuel;
			ResetTimer(gti_Timer_22);
		endif;
				
		if FuelNeeded <= 0 then															
				trans liftoff;
		endif;

		if timegreater(10,10) then
			TeleportToHell(me);
		endif;
		
		OrderAttack(false);		
endstate;

state liftoff;
	code
	
	if OrderTakeOff(600) == true then
		if count == false then
      count = true;
			StartTimer(Gti_timer_10);
		endif;
	endif;

	if timegreater(10,20) then
		if DontTest == false then
			DropNumber = DropNumber + 1;
			TeleportToHell(me);
			KillTimer(10);
			DontTest = True;
		endif;
	endif;
	
	OrderAttack(false);	
	
endstate;




state DeadState;
	code
		if (deathSound <> -1) then	
			PlaySoundOnce(deathSound);
		endif;		
		DropDead = DropDead + 1;
		SetNavPoint(ena_Nav_Beta);
		orderDie;

endstate;


endfsm.
	
	

