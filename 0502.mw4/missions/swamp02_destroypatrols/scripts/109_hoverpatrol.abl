
//*********************************************************************************
//The below line MUST be changed in order for the script to be considered
//a unique entity.  The word Patrol must be changed to some other unique identifier
fsm HoverPatrol : integer;

//This unit patrols a specific path and attacks anything that comes near it.
//------------------------------------------------------------------
//
//     Constant Definitions
//
//------------------------------------------------------------------
	const
		#include_ <content\ABLScripts\mwconst.abi>

//------------------------------------------------------------------
//
//     Type Definitions
//
//------------------------------------------------------------------
	type
		#include_ <content\ABLScripts\mwtype.abi>
	

//------------------------------------------------------------------
//
//     Variable Declarations
//
//------------------------------------------------------------------
	var
	static integer			attackrange; 	 			// When do I start shooting?
																	
	static integer			piloting;  		 			// piloting skill
	static integer			gunnery; 			 			// hit chance,
	static real					mindelay;			 			// minimum amount of time I will wait between shots once a weapon is reloaded
	static real					maxdelay;	 		 			// maximum amount of time I will wait between shots once a weapon is reloaded
	static integer 			speed;				 			// What speed so I move at?
	static integer 			elitelevel;		 			// % elite chance, This helps determine tactics, defensive manuevers, opportunity fire
																					// and other things that would normally be determined by combat experience

 	static integer			isshotradius;				// how far away from me will I detect an enemy shot.
	static integer			movetype;						// how will it move down the path?

	static Boolean 			attacksoundplayed;
	static integer 			attacksound; 				// plays when it first attacks
	static integer 			deathsound;		 			// plays when it dies
	
	static integer			mood;								// What is my normal mood?
	
	static Boolean			FallBack;						// Is it time to change my path?
	static Boolean			reachedendofpath;		// Have I gotten to the end of the path?
																					// Note: This only gets set if movetype is set to move_nocycle.
	static integer			Base;						 		// Where is my Base?  Am i too good for my HOME?
	static integer			path;						 		// what path am I following?
	static integer			path2;						 	// What path will I FALLBACK to?
	static Boolean 			attackersdistractit;	// if FALSE, it won't leave the path, even when things
																						// are shooting it. It will shoot back. Defaults to true
																						// Once unit reaches the end of the path.  It attacks freely.
	static integer			mygroup;									//Used to tell groups apart
	
//------------------------------------------------------------------
//
//     Local Functions
//
//------------------------------------------------------------------

function init;
	code
	
	//These variables should not be changed by the designer without good reason
	reachedendofpath = FALSE;						 				//false
	attacksoundplayed = FALSE;									//false
	FallBack = False;
	
	//Use this to set different values for different units using the same brain	
	switch (GetMemoryInteger(me,9))

		case 1:															 //Shroom Patrol		 Group 58
		
		attackrange = 500;				
		piloting = 75;				//80			
	  gunnery = 70;					//30						
		mindelay = 0.25;				//1.5						
		maxdelay = 1.0;				//3					
		elitelevel = 90;			//80			
	  speed = 70;						//60	 	
		isshotradius = 80;						 	
		attacksound = -1;
		deathsound = -1;
		path = epa_ShroomPath;
		path2 = epa_PathC;
		//Base = ebu_;
		movetype = move_circle;
		attackersdistractit = FALSE;
		mood = neutral_start;
		MyGroup = GroupObjectId(58);
		
		
		endcase;
		
		case 2:																 //South West Path	Group 56
		
		attackrange = 600;				
		piloting = 75;				//80			
	  gunnery = 70;					//30						
		mindelay = 0.25;				//1.5						
		maxdelay = 1.0;				//3					
		elitelevel = 90;			//80			
	  speed = 70;						//60	 	
		isshotradius = 80;						 	
		attacksound = -1;
		deathsound = -1;
		path = epa_SWestPath;
		path2 = epa_PathD;
		//Base = ebu_;
		movetype = move_circle;
		attackersdistractit = FALSE;
		mood = neutral_start;
		MyGroup = GroupObjectId(56);
		
		endcase;
		
		case 3:									 							//North West Squad	Group 57
		
		attackrange = 600;				
		piloting = 75;				//80			
	  gunnery = 70;					//30						
		mindelay = 0.25;				//1.5						
		maxdelay = 1.0;				//3					
		elitelevel = 90;			//80			
	  speed = 70;						//60	 	
		isshotradius = 180;						 	
		attacksound = -1;
		deathsound = -1;
		path = epa_NWestPath;
		path2 = epa_PathB;
		//Base = ebu_;
		movetype = move_seesaw;
		attackersdistractit = FALSE;
		mood = neutral_start;
		MyGroup = GroupObjectId(57);

		endcase;
		
		case 4:									 							//Newest Squad	Group 59
		
		attackrange = 600;				
		piloting = 75;				//80			
	  gunnery = 70;					//30						
		mindelay = 0.25;				//1.5						
		maxdelay = 1.0;				//3					
		elitelevel = 90;			//80			
	  speed = 70;						//60	 	
		isshotradius = 180;						 	
		attacksound = -1;
		deathsound = -1;
		path = epa_PathA;
		path2 = epa_PathA;
		//Base = ebu_;
		movetype = move_circle;
		attackersdistractit = FALSE;
		mood = neutral_start;
		MyGroup = GroupObjectId(57);

		endcase;
	endswitch;

	
endfunction;

//------------------------------------------------------------------
//
//     Main Code
//
//------------------------------------------------------------------
state startState;

	code
		
		SetFiringDelay(me,mindelay,maxdelay);
		setignorefriendlyfire(me,true);
		setisshotradius(me,isshotradius);
		setentropymood(me,mood);
		setcurmood(me,mood);
		setskilllevel(me,piloting,gunnery,elitelevel);
		//setsearchlight(me,on);
		//startexecute(me);
		//setalignment(me,enemy);
				
			trans patrol;

endstate;			

state deadState;
  code
		if (deathsound <> -1) then	
			PlaySoundOnce(deathsound);
		endif;		
						
		orderDie;
endstate;


	state patrol;

  var
    ObjectID foe;

		code

	//head down the path.  If this has already been done
	// or if there is no path set then look around.
			if ((path <> -1) and (reachedendofpath == FALSE)) then
					if ((orderMoveResumePatrol(path,speed,movetype,true,true)) == TRUE) then
						reachedendofpath = TRUE;
					endif; 			
			else	 		 		
				ordermovelookout;			
			endif;
			
		//Find me a target
		if (setmytarget(attackrange)) then
			trans attack;
	 	endif;
			
	endstate;

	state FallBackPatrol;

  var
    ObjectID foe;

		code

	// Change to FallBack Path and Get there.
			if ((path <> -1) and (reachedendofpath == FALSE)) then
					if ((orderMovetoFree(path2,600,movetype,true,true)) == TRUE) then
						path2 = path;
						reachedendofpath = TRUE;
					endif; 			
			else	 		 		
				ordermovelookout;			
			endif;
			
		//Find me a target
		if (setmytarget(attackrange)) then
			trans attack;
	 	endif;
			
	endstate;			
//------------------------------------------------------------------
//
//     attack state : description
//
//------------------------------------------------------------------
	state attack;
	
		
		code

		SPEED=600;
		
		if (LeaveAttackState(attackrange*3/2)) then
			orderstopattacking;
			orderMoveResumePatrol(path,speed,movetype,true,true);
			trans patrol;
		endif;
		
		//the ever popular attack order
    orderAttack (attackersdistractit);
		
		
		//maybe swap targets when I am shot.
		if ((isShot (me)) and (rand(0,75) <= 1)) then
  		setTarget(me,whoShot(me));
		endif;
 			
		If (FallBack == False) then
			 If (GroupnumDead(MyGroup) >= 5)	then
			 FallBack = True;
			 trans FallBackPatrol;
			 endif;
		endif;
					
	endstate;


endfsm.
//******************************************************************

