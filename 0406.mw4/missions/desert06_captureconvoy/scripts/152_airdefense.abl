
//*********************************************************************************
//The below line MUST be changed in order for the script to be considered
//a unique entity.  The word Sentry must be changed to some other unique identifier
fsm airde : integer;
		


// 		Behavior: Sits stationary and looks around. When an enemy comes within
//   alertrange it moves towards the unit
//	When the unit comes within attackrange it attacks
//	Whenit kills the unit it can either go back to it's start point or not,
//	depending on different settings in the brain.


//------------------------------------------------------------------
//
//     Constant Definitions
//
//------------------------------------------------------------------
	const
		#include_ <content\ABLScripts\mwconst.abi>


//------------------------------------------------------------------
//
//     Type Definitions
//
//------------------------------------------------------------------
	type
		#include_ <content\ABLScripts\mwtype.abi>
	

//------------------------------------------------------------------
//
//     Variable Declarations
//
//------------------------------------------------------------------
	var
	static boolean 			AirTimerStarted;	//For powerup time after player gets close
	static integer			attackrange; // When do I start shooting?
																
	static integer			piloting; 	// piloting skill (1-5),
	static integer			gunnery; // hit chance,
	static real					mindelay;		//minimum amount of time I will wait between shots once a weapon is reloaded
	static real					maxdelay;		//maximum amount of time I will wait between shots once a weapon is reloaded
	static integer 			speed;			 // What speed so I move at?
	static integer 			elitelevel; // % elite chance, This helps determine tactics, defensive manuevers, opportunity fire
																	// and other things that would normally be determined by combat experience

  static integer			isshotradius;	//how far away from me will I detect an enemy shot.
	
	static integer			mood;	//What is my normal mood?
			
	static Boolean 			attacksoundplayed;	//Am I attacking?
	
	//if set to -1 the below sounds effectively do not exist
	static integer 			attacksound; // plays when the unit first attacks
	static integer 			deathsound; // plays when the unit dies
	
	static locpoint			mystart; //Where was the unit when the mission started
	static boolean			movingtostart;	//Is the unit moving to the start point
	static boolean			movetostart;	//should the unit move back to it's start point when it's done fighting?
	static integer			detectrange; //for powerup and start of timer
//------------------------------------------------------------------
//
//     Local Functions
//
//------------------------------------------------------------------

function init;
	code

																			// defaults are below
	//These are the variables that are normally changed by the designer
	//in order to change behavior
	attackrange = 700;									//500
	piloting = 60;												//3
	gunnery = 75;											//30
	mindelay = 0.5;											//1.5
	maxdelay = 1.0;											//3.0
	elitelevel = 70;										//30
	speed = 600;												//600 (max speed)
	isshotradius = 80;										//80	
	attacksound = -1;                   //-1 (no sound)
	deathsound = -1;                    //-1 (no sound)	
	movetostart = true;								//False
	mood = Neutral_start;								//neutral_start

	//These variables should not be changed by the designer without good reason
	attacksoundplayed = FALSE;									//false
	getlocation(me,mystart);		 				//DO NOT CHANGE THIS LINE!!!
	movingtostart = false;							//false
	detectrange = 600;
		
endfunction;

//------------------------------------------------------------------
//
//     Main Code
//
//------------------------------------------------------------------
state startState;

	code
		SetFiringDelay(me,mindelay,maxdelay);
		setignorefriendlyfire(me,true);
		setisshotradius(me,isshotradius);
		setentropymood(me,mood);
		setcurmood(me,mood);
		setskilllevel(me,piloting,gunnery,elitelevel);
		Shutdown(me);
		trans powerdown;

endstate;
		
		
state powerDown;
	
	 code;
	 	
		if (PlayerShooting(epl_player0,5) == TRUE) then
			if (IsWithin(playermech,ebu_tower1,1000)) then
			detectrange = 1000;
			endif;
		endif;

		if isdead(ebu_tower1) then	
			trans sit;
		endif;
		
		if isdead(ebu_radar1) then
			trans sit;
		endif;
	
	
	 if (iswithin(playermech,eve_AirD2,detectrange) == TRUE) then
	  	if (Airtimerstarted == false) then
				airtimerstarted = true;												
	 			ResetTimer(16);																										
				StartTimer(16);
	 endif
			endif;												
			 		
		if (airtimerstarted == true) then
			if (timegreater(gti_Timer_16,7)) then
					trans sit;
			endif;
		endif;



endstate;			

state deadState;
  code
		if (deathsound <> -1) then	
			PlaySoundOnce(deathsound);
		endif;
		
		orderDie;
endstate;

	state sit;

  var
    ObjectID foe;

		code
		
		startup(me);
//		playsoundonce(eso_notice);
		//Go back to my start point if I am supposed to
		if (movingtostart == true) then
			if (orderMovetolocpoint(mystart,speed,true,true) == true) then
				movingtostart = false;
			endif;
		endif;
		
		//initial order
		if (movingtostart == false) then		
			OrderMoveLookout;
		endif;
		
		//attack anyone who shoots my group if I'm in a group
		//otherwise attack anyone who shoots at me
		if (IsShot (me)) then
			SetTarget(me,whoShot(me));
			SetCurMood(ME,AGRESSIVE_START);
			trans Attack;
		endif;		

				
		//find me an enemy
foe = FindObject(ME,FA_ENEMY,FT_DEFAULT,FC_BEST_TARGET,FF_WHO_SHOT + FF_SEEPLAYER,0);
		
		if (foe <> no_unit) then
			//if the enemy is inside my attackrange range then attack it
			if (IsWithin (foe,(me),attackrange)) then
				SetTarget (me,foe);
				trans Attack;
			endif;		
		endif;
			
	endstate;

//------------------------------------------------------------------
//
//     attack state : description
//
//------------------------------------------------------------------
	state attack;
		code
		if (LeaveAttackState(1000)) then
			OrderStopAttacking;
			SetTarget(ME,NO_UNIT);
			trans sit;
		endif;

		OrderAttack(true);					
	endstate;
	
endfsm.
//******************************************************************

